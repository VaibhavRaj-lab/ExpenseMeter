{"version":3,"sources":["components/Expenses/ExpensesFilter.js","components/Expenses/ExpensesDate.js","components/Expenses/ExpenseItems.js","components/Expenses/ExpenseList.js","components/Chart/ChartBar.js","components/Chart/Chart.js","components/Expenses/ExpensesChart.js","components/Expenses/Expenses.js","components/ExpensesForm/ExpensesForm.js","components/ExpensesForm/NewItem.js","App.js","index.js"],"names":["ExpensesFilter","props","className","onChange","event","onChangeFilter","target","value","ExpenseDate","month","date","toLocaleString","day","year","getFullYear","ExpenseItems","title","amount","ExpenseList","expensefilter","items","length","map","expense","ChartBar","barFillHeight","maxValue","Math","round","style","height","label","Chart","dataPointValues","dataPoints","dataPoint","totalMaximum","max","ExpensesChart","chartDataPoints","expenses","getMonth","Expenses","useState","filteredYear","setFilteredYear","filteredExpenses","filter","toString","selected","selectedYear","ExpensesForm","enteredTitle","setTitle","enteredAmount","setAmount","enteredDate","setDate","onSubmit","preventDefault","Date","onSaveExpenseitem","type","onClick","Cancel","NewItem","AddExpense","setAddexpense","expensedata","expenseitems","id","random","onAddItems","dummyExpenses","App","setExpense","prevExpense","ReactDOM","render","document","getElementById"],"mappings":"0YAkBeA,MAjBf,SAAwBC,GAKtB,OACE,sBAAKC,UAAU,SAAf,UACE,gDACA,yBAAQA,UAAU,aAAaC,SAPf,SAACC,GAEnBH,EAAMI,eAAeD,EAAME,OAAOC,QAKhC,UACE,wBAAQA,MAAM,OAAd,kBACA,wBAAQA,MAAM,OAAd,kBACA,wBAAQA,MAAM,OAAd,kBACA,wBAAQA,MAAM,OAAd,yBCKOC,G,YAdK,SAACP,GACnB,IAAMQ,EAAQR,EAAMS,KAAKC,eAAe,QAAS,CAAEF,MAAO,SACpDG,EAAMX,EAAMS,KAAKC,eAAe,QAAS,CAAEC,IAAK,YAChDC,EAAOZ,EAAMS,KAAKI,cAExB,OACE,sBAAKZ,UAAU,eAAf,UACE,qBAAKA,UAAU,sBAAf,SAAsCO,IACtC,qBAAKP,UAAU,qBAAf,SAAqCW,IACrC,qBAAKX,UAAU,oBAAf,SAAoCU,SCW3BG,MAnBf,SAAsBd,GAOpB,OACE,sBAAKC,UAAU,eAAf,UACE,cAAC,EAAD,CAAaQ,KAAMT,EAAMS,OACzB,sBAAKR,UAAU,4BAAf,UACE,6BAAKD,EAAMe,QACX,qBAAKd,UAAU,sBAAf,SAAsCD,EAAMgB,gB,MCDrCC,MAbf,SAAqBjB,GACnB,IAAIkB,EAAgB,mBAAGjB,UAAU,WAAb,2BAUpB,OATID,EAAMmB,MAAMC,OAAS,IACvBF,EAAgBlB,EAAMmB,MAAME,KAAI,SAACC,GAAD,OAC9B,cAAC,EAAD,CACEP,MAAOO,EAAQP,MACfC,OAAQM,EAAQN,OAChBP,KAAMa,EAAQb,WAIbS,G,OCUMK,G,MApBE,SAACvB,GAChB,IAAIwB,EAAgB,KAMpB,OAJIxB,EAAMyB,SAAW,IACnBD,EAAgBE,KAAKC,MAAO3B,EAAMM,MAAQN,EAAMyB,SAAY,KAAO,KAInE,sBAAKxB,UAAU,YAAf,UACE,qBAAKA,UAAU,mBAAf,SACE,qBACEA,UAAU,kBACV2B,MAAO,CAAEC,OAAQL,OAGrB,qBAAKvB,UAAU,mBAAf,SAAmCD,EAAM8B,aCIhCC,G,MAlBD,SAAC/B,GACb,IAAMgC,EAAkBhC,EAAMiC,WAAWZ,KAAI,SAACa,GAAD,OAAeA,EAAU5B,SAChE6B,EAAeT,KAAKU,IAAL,MAAAV,KAAI,YAAQM,IAEjC,OACE,qBAAK/B,UAAU,QAAf,SACGD,EAAMiC,WAAWZ,KAAI,SAACa,GAAD,OACpB,cAAC,EAAD,CAEE5B,MAAO4B,EAAU5B,MACjBmB,SAAUU,EACVL,MAAOI,EAAUJ,OAHZI,EAAUJ,cCeVO,EAxBO,SAACrC,GACrB,IAD+B,EACzBsC,EAAkB,CACtB,CAAER,MAAO,MAAOxB,MAAO,GACvB,CAAEwB,MAAO,MAAOxB,MAAO,GACvB,CAAEwB,MAAO,MAAOxB,MAAO,GACvB,CAAEwB,MAAO,MAAOxB,MAAO,GACvB,CAAEwB,MAAO,MAAOxB,MAAO,GACvB,CAAEwB,MAAO,MAAOxB,MAAO,GACvB,CAAEwB,MAAO,MAAOxB,MAAO,GACvB,CAAEwB,MAAO,MAAOxB,MAAO,GACvB,CAAEwB,MAAO,MAAOxB,MAAO,GACvB,CAAEwB,MAAO,MAAOxB,MAAO,GACvB,CAAEwB,MAAO,MAAOxB,MAAO,GACvB,CAAEwB,MAAO,MAAOxB,MAAO,IAbM,cAgBTN,EAAMuC,UAhBG,IAgB/B,2BAAsC,CAAC,IAA5BjB,EAA2B,QAEpCgB,EADqBhB,EAAQb,KAAK+B,YACJlC,OAASgB,EAAQN,QAlBlB,8BAqB/B,OAAO,cAAC,EAAD,CAAOiB,WAAYK,K,MCMbG,MAvBf,SAAkBzC,GAChB,MAAwC0C,mBAAS,QAAjD,mBAAOC,EAAP,KAAqBC,EAArB,KAMMC,EAAmB7C,EAAMmB,MAAM2B,QAAO,SAACxB,GAC3C,OAAOA,EAAQb,KAAKI,cAAckC,aAAeJ,KAGnD,OACE,sBAAK1C,UAAU,WAAf,UACE,cAAC,EAAD,CACE+C,SAAUL,EACVvC,eAZsB,SAAC6C,GAC3BL,EAAgBK,MAad,cAAC,EAAD,CAAeV,SAAUM,IACzB,cAAC,EAAD,CAAa1B,MAAO0B,Q,aC8BXK,MAtDf,SAAsBlD,GACpB,MAAiC0C,mBAAS,IAA1C,mBAAOS,EAAP,KAAqBC,EAArB,KACA,EAAmCV,mBAAS,IAA5C,mBAAOW,EAAP,KAAsBC,EAAtB,KACA,EAA+BZ,mBAAS,IAAxC,mBAAOa,EAAP,KAAoBC,EAApB,KAyBA,OACE,uBAAMC,SAdc,SAACtD,GACrBA,EAAMuD,iBACN,IAAMnB,EAAW,CACfxB,MAAOoC,EACPnC,OAAQqC,EACR5C,KAAM,IAAIkD,KAAKJ,IAEjBvD,EAAM4D,kBAAkBrB,GACxBa,EAAS,IACTE,EAAU,IACVE,EAAQ,KAIR,UACE,sBAAKvD,UAAU,wBAAf,UACE,sBAAKA,UAAU,uBAAf,UACE,0CACA,uBAAO4D,KAAK,OAAOvD,MAAO6C,EAAcjD,SA3B3B,SAACC,GACpBiD,EAASjD,EAAME,OAAOC,aA4BlB,sBAAKL,UAAU,uBAAf,UACE,2CACA,uBAAO4D,KAAK,SAASvD,MAAO+C,EAAenD,SA5B7B,SAACC,GACrBmD,EAAUnD,EAAME,OAAOC,aA6BnB,sBAAKL,UAAU,uBAAf,UACE,yCACA,uBAAO4D,KAAK,OAAOvD,MAAOiD,EAAarD,SA7B3B,SAACC,GACnBqD,EAAQrD,EAAME,OAAOC,gBA+BnB,sBAAKL,UAAU,sBAAf,UACE,wBAAQ4D,KAAK,SAASC,QAAS9D,EAAM+D,OAArC,oBAGA,wBAAQF,KAAK,SAAb,2B,MChBOG,MA9Bf,SAAiBhE,GACf,MAAoC0C,mBAAS,IAA7C,mBAAOuB,EAAP,KAAmBC,EAAnB,KAiBA,OACE,sBAAKjE,UAAU,cAAf,WACIgE,GAAc,wBAAQH,QAlBL,WACrBI,GAAc,IAiBI,yBACfD,GACC,cAAC,EAAD,CACEL,kBAdc,SAACO,GACrB,IAAMC,EAAY,2BACbD,GADa,IAEhBE,GAAI3C,KAAK4C,SAASvB,aAGpB/C,EAAMuE,WAAWH,GACjBF,GAAc,IAQRH,OAnBU,WAChBG,GAAc,UCNZM,EAAgB,CACpB,CACEH,GAAI,KACJtD,MAAO,eACPC,OAAQ,MACRP,KAAM,IAAIkD,KAAK,KAAM,EAAG,KAE1B,CAAEU,GAAI,KAAMtD,MAAO,SAAUC,OAAQ,OAAQP,KAAM,IAAIkD,KAAK,KAAM,EAAG,KACrE,CACEU,GAAI,KACJtD,MAAO,gBACPC,OAAQ,OACRP,KAAM,IAAIkD,KAAK,KAAM,EAAG,KAE1B,CACEU,GAAI,KACJtD,MAAO,oBACPC,OAAQ,IACRP,KAAM,IAAIkD,KAAK,KAAM,EAAG,MAqBbc,MAlBf,WACE,MAA+B/B,mBAAS8B,GAAxC,mBAAOjC,EAAP,KAAiBmC,EAAjB,KAOA,OACE,gCACE,oDAEA,cAAC,EAAD,CAASH,WATI,SAACjD,GAChBoD,GAAW,SAACC,GACV,MAAM,CAAErD,GAAR,mBAAoBqD,UAQpB,cAAC,EAAD,CAAUxD,MAAOoB,QCjCvBqC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.592348c8.chunk.js","sourcesContent":["import \"./ExpensesFilter.css\";\r\nfunction ExpensesFilter(props) {\r\n  const filterdates = (event) => {\r\n    // console.log(event.target.value);\r\n    props.onChangeFilter(event.target.value);\r\n  };\r\n  return (\r\n    <div className=\"Filter\">\r\n      <h2>Filter By Year</h2>\r\n      <select className=\"FilterDate\" onChange={filterdates}>\r\n        <option value=\"2019\">2019</option>\r\n        <option value=\"2020\">2020</option>\r\n        <option value=\"2021\">2021</option>\r\n        <option value=\"2022\">2022</option>\r\n      </select>\r\n    </div>\r\n  );\r\n}\r\nexport default ExpensesFilter;\r\n","import React from \"react\";\r\n\r\nimport \"./ExpenseDate.css\";\r\n\r\nconst ExpenseDate = (props) => {\r\n  const month = props.date.toLocaleString(\"en-US\", { month: \"long\" });\r\n  const day = props.date.toLocaleString(\"en-US\", { day: \"2-digit\" });\r\n  const year = props.date.getFullYear();\r\n\r\n  return (\r\n    <div className=\"expense-date\">\r\n      <div className=\"expense-date__month\">{month}</div>\r\n      <div className=\"expense-date__year\">{year}</div>\r\n      <div className=\"expense-date__day\">{day}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ExpenseDate;\r\n","// import React, { useState } from \"react\";\r\nimport \"./ExpenseItems.css\";\r\nimport ExpenseDate from \"./ExpensesDate\";\r\n// import Card from \"./Card\";\r\n// using props in custom component\r\nfunction ExpenseItems(props) {\r\n  // const [title, setTitle] = useState(props.title);\r\n\r\n  // const clickHandler = () => {\r\n  //   setTitle(\"updated\");\r\n  //   console.log(title);\r\n  // };\r\n  return (\r\n    <div className=\"expense-item\">\r\n      <ExpenseDate date={props.date}></ExpenseDate>\r\n      <div className=\"expense-item__description\">\r\n        <h2>{props.title}</h2>\r\n        <div className=\"expense-item__price\">{props.amount}</div>\r\n        {/* <button>Update</button> */}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ExpenseItems;\r\n","import ExpenseItems from \"./ExpenseItems\";\r\nimport \"./ExpenseList.css\";\r\n\r\nfunction ExpenseList(props) {\r\n  let expensefilter = <p className=\"fallback\">No Data Found</p>;\r\n  if (props.items.length > 0) {\r\n    expensefilter = props.items.map((expense) => (\r\n      <ExpenseItems\r\n        title={expense.title}\r\n        amount={expense.amount}\r\n        date={expense.date}\r\n      />\r\n    ));\r\n  }\r\n  return expensefilter;\r\n}\r\nexport default ExpenseList;\r\n","import React from \"react\";\r\n\r\nimport \"./ChartBar.css\";\r\n\r\nconst ChartBar = (props) => {\r\n  let barFillHeight = \"0%\";\r\n\r\n  if (props.maxValue > 0) {\r\n    barFillHeight = Math.round((props.value / props.maxValue) * 100) + \"%\";\r\n  }\r\n\r\n  return (\r\n    <div className=\"chart-bar\">\r\n      <div className=\"chart-bar__inner\">\r\n        <div\r\n          className=\"chart-bar__fill\"\r\n          style={{ height: barFillHeight }}\r\n        ></div>\r\n      </div>\r\n      <div className=\"chart-bar__label\">{props.label}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChartBar;\r\n","import React from \"react\";\r\n\r\nimport ChartBar from \"./ChartBar\";\r\nimport \"./Chart.css\";\r\n\r\nconst Chart = (props) => {\r\n  const dataPointValues = props.dataPoints.map((dataPoint) => dataPoint.value);\r\n  const totalMaximum = Math.max(...dataPointValues);\r\n\r\n  return (\r\n    <div className=\"chart\">\r\n      {props.dataPoints.map((dataPoint) => (\r\n        <ChartBar\r\n          key={dataPoint.label}\r\n          value={dataPoint.value}\r\n          maxValue={totalMaximum}\r\n          label={dataPoint.label}\r\n        />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Chart;\r\n","import React from \"react\";\r\n\r\nimport Chart from \"../Chart/Chart\";\r\n\r\nconst ExpensesChart = (props) => {\r\n  const chartDataPoints = [\r\n    { label: \"Jan\", value: 0 },\r\n    { label: \"Feb\", value: 0 },\r\n    { label: \"Mar\", value: 0 },\r\n    { label: \"Apr\", value: 0 },\r\n    { label: \"May\", value: 0 },\r\n    { label: \"Jun\", value: 0 },\r\n    { label: \"Jul\", value: 0 },\r\n    { label: \"Aug\", value: 0 },\r\n    { label: \"Sep\", value: 0 },\r\n    { label: \"Oct\", value: 0 },\r\n    { label: \"Nov\", value: 0 },\r\n    { label: \"Dec\", value: 0 },\r\n  ];\r\n\r\n  for (const expense of props.expenses) {\r\n    const expenseMonth = expense.date.getMonth(); // starting at 0 => January => 0\r\n    chartDataPoints[expenseMonth].value += expense.amount;\r\n  }\r\n\r\n  return <Chart dataPoints={chartDataPoints} />;\r\n};\r\n\r\nexport default ExpensesChart;\r\n","// import ExpenseItems from \"./ExpenseItems\";\r\nimport ExpensesFilter from \"./ExpensesFilter\";\r\nimport ExpenseList from \"./ExpenseList\";\r\n// import Card from \"./Card\";\r\nimport ExpensesChart from \"./ExpensesChart\";\r\nimport \"./Expenses.css\";\r\nimport { useState } from \"react\";\r\n// import Card from \"./Card\";\r\nfunction Expenses(props) {\r\n  const [filteredYear, setFilteredYear] = useState(\"2020\");\r\n\r\n  const filterChangeHandler = (selectedYear) => {\r\n    setFilteredYear(selectedYear);\r\n  };\r\n\r\n  const filteredExpenses = props.items.filter((expense) => {\r\n    return expense.date.getFullYear().toString() === filteredYear;\r\n  });\r\n\r\n  return (\r\n    <div className=\"expenses\">\r\n      <ExpensesFilter\r\n        selected={filteredYear}\r\n        onChangeFilter={filterChangeHandler}\r\n      ></ExpensesFilter>\r\n      <ExpensesChart expenses={filteredExpenses} />\r\n      <ExpenseList items={filteredExpenses}></ExpenseList>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Expenses;\r\n","import \"./ExpenseForm.css\";\r\nimport React, { useState } from \"react\";\r\nfunction ExpensesForm(props) {\r\n  const [enteredTitle, setTitle] = useState(\"\");\r\n  const [enteredAmount, setAmount] = useState(\"\");\r\n  const [enteredDate, setDate] = useState(\"\");\r\n\r\n  // console.log(enteredAmount, enteredDate, enteredTitle);\r\n  const titleHandler = (event) => {\r\n    setTitle(event.target.value);\r\n  };\r\n  const amountHandler = (event) => {\r\n    setAmount(event.target.value);\r\n  };\r\n  const dateHandler = (event) => {\r\n    setDate(event.target.value);\r\n  };\r\n  const submitHandler = (event) => {\r\n    event.preventDefault();\r\n    const expenses = {\r\n      title: enteredTitle,\r\n      amount: enteredAmount,\r\n      date: new Date(enteredDate),\r\n    };\r\n    props.onSaveExpenseitem(expenses);\r\n    setTitle(\"\");\r\n    setAmount(\"\");\r\n    setDate(\"\");\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={submitHandler}>\r\n      <div className=\"new-expense__controls\">\r\n        <div className=\"new-expense__control\">\r\n          <label>Title</label>\r\n          <input type=\"text\" value={enteredTitle} onChange={titleHandler} />\r\n        </div>\r\n        <div className=\"new-expense__control\">\r\n          <label>Amount</label>\r\n          <input type=\"number\" value={enteredAmount} onChange={amountHandler} />\r\n        </div>\r\n        <div className=\"new-expense__control\">\r\n          <label>Date</label>\r\n          <input type=\"date\" value={enteredDate} onChange={dateHandler} />\r\n        </div>\r\n      </div>\r\n      <div className=\"new-expense__action\">\r\n        <button type=\"button\" onClick={props.Cancel}>\r\n          Cancel\r\n        </button>\r\n        <button type=\"submit\">submit</button>\r\n      </div>\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default ExpensesForm;\r\n","import { useState } from \"react\";\r\nimport ExpensesForm from \"./ExpensesForm\";\r\n\r\nimport \"./NewItems.css\";\r\nfunction NewItem(props) {\r\n  const [AddExpense, setAddexpense] = useState(\"\");\r\n  const showAddExpense = () => {\r\n    setAddexpense(true);\r\n  };\r\n  const cancelAdd = () => {\r\n    setAddexpense(false);\r\n  };\r\n\r\n  const onSaveHandler = (expensedata) => {\r\n    const expenseitems = {\r\n      ...expensedata,\r\n      id: Math.random().toString(),\r\n    };\r\n    // console.log(expenseitems);\r\n    props.onAddItems(expenseitems);\r\n    setAddexpense(false);\r\n  };\r\n  return (\r\n    <div className=\"new-expense\">\r\n      {!AddExpense && <button onClick={showAddExpense}>ADD EXPENSE</button>}\r\n      {AddExpense && (\r\n        <ExpensesForm\r\n          onSaveExpenseitem={onSaveHandler}\r\n          Cancel={cancelAdd}\r\n        ></ExpensesForm>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\nexport default NewItem;\r\n","import { useState } from \"react\";\nimport Expenses from \"./components/Expenses/Expenses\";\nimport NewItem from \"./components/ExpensesForm/NewItem\";\n\nconst dummyExpenses = [\n  {\n    id: \"e1\",\n    title: \"Toilet Paper\",\n    amount: 94.12,\n    date: new Date(2020, 7, 14),\n  },\n  { id: \"e2\", title: \"New TV\", amount: 799.49, date: new Date(2021, 2, 12) },\n  {\n    id: \"e3\",\n    title: \"Car Insurance\",\n    amount: 294.67,\n    date: new Date(2021, 2, 28),\n  },\n  {\n    id: \"e4\",\n    title: \"New Desk (Wooden)\",\n    amount: 450,\n    date: new Date(2021, 5, 12),\n  },\n];\nfunction App() {\n  const [expenses, setExpense] = useState(dummyExpenses);\n\n  const addItems = (expense) => {\n    setExpense((prevExpense) => {\n      return [expense, ...prevExpense];\n    });\n  };\n  return (\n    <div>\n      <h2>Let's get started!</h2>\n\n      <NewItem onAddItems={addItems}></NewItem>\n      <Expenses items={expenses} />\n    </div>\n  );\n}\n\nexport default App;\n","import ReactDOM from \"react-dom\";\n\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}